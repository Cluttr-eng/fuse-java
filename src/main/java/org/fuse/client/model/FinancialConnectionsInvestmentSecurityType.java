/*
 * Fuse
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.fuse.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets FinancialConnectionsInvestmentSecurityType
 */
@JsonAdapter(FinancialConnectionsInvestmentSecurityType.Adapter.class)
public enum FinancialConnectionsInvestmentSecurityType {
  
  CASH("cash"),
  
  CRYPTOCURRENCY("cryptocurrency"),
  
  DERIVATIVE("derivative"),
  
  EQUITY("equity"),
  
  ETF("etf"),
  
  FIXED_INCOME("fixed_income"),
  
  LOAN("loan"),
  
  MUTUAL_FUND("mutual_fund"),
  
  OTHER("other"),
  
  GLOBAL_DEPOSITARY_RECEIPT("global_depositary_receipt"),
  
  OPEN_ENDED_FUND("open_ended_fund"),
  
  RIGHT("right"),
  
  TEMPORARY("temporary"),
  
  WARRANT("warrant"),
  
  CLOSED_ENDED_FUND("closed_ended_fund"),
  
  COMMON_STOCK("common_stock"),
  
  EXCHANGE_TRADED_FUND("exchange_traded_fund"),
  
  BOND("bond"),
  
  AMERICAN_DEPOSITARY_RECEIPT("american_depositary_receipt"),
  
  UNIT("unit"),
  
  STRUCTURED_PRODUCT("structured_product"),
  
  PREFERRED_STOCK("preferred_stock"),
  
  REAL_ESTATE("real_estate"),
  
  AUTOMOBILE("automobile"),
  
  DELISTED_OR_DEFUNCT_ASSET("delisted_or_defunct_asset"),
  
  MINUS("-");

  private String value;

  FinancialConnectionsInvestmentSecurityType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FinancialConnectionsInvestmentSecurityType fromValue(String value) {
    for (FinancialConnectionsInvestmentSecurityType b : FinancialConnectionsInvestmentSecurityType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FinancialConnectionsInvestmentSecurityType> {
    @Override
    public void write(final JsonWriter jsonWriter, final FinancialConnectionsInvestmentSecurityType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FinancialConnectionsInvestmentSecurityType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FinancialConnectionsInvestmentSecurityType.fromValue(value);
    }
  }
}

