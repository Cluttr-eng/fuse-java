/*
 * Fuse
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.fuse.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Primary transaction category
 */
@JsonAdapter(TransactionCategoryPrimary.Adapter.class)
public enum TransactionCategoryPrimary {
  
  AUTO_AND_TRANSPORT("auto_and_transport"),
  
  BILLS_AND_UTILITIES("bills_and_utilities"),
  
  BUSINESS_SERVICES("business_services"),
  
  EDUCATION("education"),
  
  ENTERTAINMENT("entertainment"),
  
  FEES_AND_CHARGES("fees_and_charges"),
  
  FINANCIAL("financial"),
  
  FOOD_AND_DINING("food_and_dining"),
  
  GIFTS_AND_DONATIONS("gifts_and_donations"),
  
  HEALTH_AND_FITNESS("health_and_fitness"),
  
  HOME("home"),
  
  INCOME("income"),
  
  INVESTMENTS("investments"),
  
  KIDS("kids"),
  
  PERSONAL_CARE("personal_care"),
  
  PETS("pets"),
  
  SHOPPING("shopping"),
  
  TAXES("taxes"),
  
  TRANSFER("transfer"),
  
  TRAVEL("travel"),
  
  UNCATEGORIZED("uncategorized");

  private String value;

  TransactionCategoryPrimary(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TransactionCategoryPrimary fromValue(String value) {
    for (TransactionCategoryPrimary b : TransactionCategoryPrimary.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TransactionCategoryPrimary> {
    @Override
    public void write(final JsonWriter jsonWriter, final TransactionCategoryPrimary enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TransactionCategoryPrimary read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TransactionCategoryPrimary.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TransactionCategoryPrimary.fromValue(value);
  }
}

